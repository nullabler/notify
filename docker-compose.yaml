version:  '3.7'

services:
  kafka:
    image: docker.io/bitnami/kafka:3.5
    container_name: kafka
    volumes:
      - '.build/kafka/data:/bitnami'
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
# Start Kraft Setup (Kafka as Controller - no Zookeeper)
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/tmp/logs
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:9094
      # End Kraft Specific Setup
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,INTERNAL://kafka:9094
    ports:
      - '${KAFKA_PORT}:9092'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - '${KAFKA_UI_PORT}:8080'
    restart: "always"
    environment:
      KAFKA_CLUSTERS_0_NAME: '_Notify_Kafka_Cluster_'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
      DYNAMIC_CONFIG_ENABLED: true
    depends_on:
      - kafka

  notify:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - './:/app'
    ports:
      - '${NOTIFY_PORT}:80'
    depends_on:
      - kafka
